{"version":3,"sources":["sortable_item.js","container.js","app.js","index.js"],"names":["Item","props","id","_jsx","style","width","height","display","alignItems","justifyContent","border","margin","background","cursor","borderRadius","children","SortableItem","_useSortable","useSortable","attributes","listeners","setNodeRef","transform","transition","CSS","Transform","toString","_objectSpread","ref","containerStyle","padding","flex","Container","items","useDroppable","SortableContext","strategy","verticalListSortingStrategy","map","wrapperStyle","flexDirection","textAlign","App","_useState","useState","container1","container2","container3","_useState2","_slicedToArray","setItems","_useState3","_useState4","activeId","setActiveId","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","_jsxs","Fragment","color","DndContext","collisionDetection","closestCorners","onDragStart","event","active","onDragOver","over","draggingRect","overId","activeContainer","findContainer","overContainer","prev","_objectSpread2","newIndex","activeItems","overItems","activeIndex","indexOf","overIndex","length","isBelowLastItem","offsetTop","rect","_defineProperty","_toConsumableArray","filter","item","concat","slice","onDragEnd","arrayMove","DragOverlay","Object","keys","find","key","includes","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5d38c915.chunk.js","sourcesContent":["import React from \"react\";\nimport { useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\n\nexport function Item(props) {\n  const { id } = props;\n\n  const style = {\n    width: \"100%\",\n    height: 50,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"1px solid black\",\n    margin: \"10px 0\",\n    background: \"#fffbeb\",\n    cursor: \"pointer\",\n    borderRadius: \"20px\",\n  };\n\n  return <div style={style}>{id}</div>;\n}\n\nexport default function SortableItem(props) {\n  const { attributes, listeners, setNodeRef, transform, transition } =\n    useSortable({ id: props.id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <div ref={setNodeRef} style={style} {...attributes} {...listeners}>\n      <Item id={props.id} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useDroppable } from \"@dnd-kit/core\";\nimport {\n  SortableContext,\n  verticalListSortingStrategy,\n} from \"@dnd-kit/sortable\";\n\nimport SortableItem from \"./sortable_item\";\n\nconst containerStyle = {\n  background: \"#5e5e5e\",\n  padding: 10,\n  margin: 30,\n  flex: 1,\n  width: \"30vw\",\n  borderRadius: \"20px\",\n};\n\nexport default function Container(props) {\n  const { id, items } = props;\n\n  const { setNodeRef } = useDroppable({\n    id,\n  });\n\n  return (\n    <SortableContext\n      id={id}\n      items={items}\n      strategy={verticalListSortingStrategy}\n    >\n      <div ref={setNodeRef} style={containerStyle}>\n        {items.map((id) => (\n          <SortableItem key={id} id={id} />\n        ))}\n      </div>\n    </SortableContext>\n  );\n}\n","import React, { Fragment, useState } from \"react\";\nimport {\n  DndContext,\n  DragOverlay,\n  closestCorners,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n} from \"@dnd-kit/core\";\nimport { arrayMove, sortableKeyboardCoordinates } from \"@dnd-kit/sortable\";\nimport Container from \"./container\";\nimport { Item } from \"./sortable_item\";\nimport \"./styles.css\";\n\nconst wrapperStyle = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  textAlign: \"center\",\n};\n\nexport default function App() {\n  const [items, setItems] = useState({\n    container1: [\"Master React\", \"Learn TypeScript\"],\n    container2: [\"Get the Interview\"],\n    container3: [\"Build a Kanban Board\", \"Make sure there is no errors\"],\n  });\n  const [activeId, setActiveId] = useState();\n\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  return (\n    <Fragment>\n      <h1 style={{ textAlign: \"center\", color: \"white\" }}>\n        Welcome to the Kanban Board\n      </h1>\n      <div style={wrapperStyle}>\n        <DndContext\n          sensors={sensors}\n          collisionDetection={closestCorners}\n          onDragStart={handleDragStart}\n          onDragOver={handleDragOver}\n          onDragEnd={handleDragEnd}\n        >\n          <div>\n            <h2 style={{ color: \"white\" }}>To Do</h2>\n            <Container id=\"container1\" items={items.container1} />\n          </div>\n\n          <div>\n            <h2 style={{ color: \"white\" }}>In Progress</h2>\n            <Container id=\"container2\" items={items.container2} />\n          </div>\n          <div>\n            <h2 style={{ color: \"white\" }}>Done</h2>\n            <Container id=\"container3\" items={items.container3} />\n          </div>\n          <DragOverlay>{activeId ? <Item id={activeId} /> : null}</DragOverlay>\n        </DndContext>\n      </div>\n    </Fragment>\n  );\n\n  function findContainer(id) {\n    if (id in items) {\n      return id;\n    }\n\n    return Object.keys(items).find((key) => items[key].includes(id));\n  }\n\n  function handleDragStart(event) {\n    const { active } = event;\n    const { id } = active;\n\n    setActiveId(id);\n  }\n\n  function handleDragOver(event) {\n    const { active, over, draggingRect } = event;\n    const { id } = active;\n    const { id: overId } = over;\n\n    const activeContainer = findContainer(id);\n    const overContainer = findContainer(overId);\n\n    if (\n      !activeContainer ||\n      !overContainer ||\n      activeContainer === overContainer\n    ) {\n      return;\n    }\n\n    setItems((prev) => {\n      const activeItems = prev[activeContainer];\n      const overItems = prev[overContainer];\n\n      const activeIndex = activeItems.indexOf(id);\n      const overIndex = overItems.indexOf(overId);\n\n      let newIndex;\n      if (overId in prev) {\n        newIndex = overItems.length + 1;\n      } else {\n        const isBelowLastItem =\n          over &&\n          overIndex === overItems.length - 1 &&\n          draggingRect.offsetTop > over.rect.offsetTop + over.rect.height;\n\n        const modifier = isBelowLastItem ? 1 : 0;\n\n        newIndex = overIndex >= 0 ? overIndex + modifier : overItems.length + 1;\n      }\n\n      return {\n        ...prev,\n        [activeContainer]: [\n          ...prev[activeContainer].filter((item) => item !== active.id),\n        ],\n        [overContainer]: [\n          ...prev[overContainer].slice(0, newIndex),\n          items[activeContainer][activeIndex],\n          ...prev[overContainer].slice(newIndex, prev[overContainer].length),\n        ],\n      };\n    });\n  }\n\n  function handleDragEnd(event) {\n    const { active, over } = event;\n    const { id } = active;\n    const { id: overId } = over;\n\n    const activeContainer = findContainer(id);\n    const overContainer = findContainer(overId);\n\n    if (\n      !activeContainer ||\n      !overContainer ||\n      activeContainer !== overContainer\n    ) {\n      return;\n    }\n\n    const activeIndex = items[activeContainer].indexOf(active.id);\n    const overIndex = items[overContainer].indexOf(overId);\n\n    if (activeIndex !== overIndex) {\n      setItems((items) => ({\n        ...items,\n        [overContainer]: arrayMove(\n          items[overContainer],\n          activeIndex,\n          overIndex\n        ),\n      }));\n    }\n\n    setActiveId(null);\n  }\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./app\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}